// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data.DAL;

#nullable disable

namespace WebApp.Data.Migrations
{
    [DbContext(typeof(MyMarksContext))]
    [Migration("20240330162515_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("WebApp.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("WebApp.Data.Models.EvaluationGroup", b =>
                {
                    b.Property<int>("EvaluationGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGroupPassRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EvaluationGroupId");

                    b.ToTable("EvaluationGroups");
                });

            modelBuilder.Entity("WebApp.Data.Models.EvaluationItem", b =>
                {
                    b.Property<int>("EvaluationItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EarnedMarks")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EvaluationGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PossibleMarks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("EvaluationItemId");

                    b.HasIndex("CourseId");

                    b.HasIndex("EvaluationGroupId");

                    b.ToTable("EvaluationItems");
                });

            modelBuilder.Entity("WebApp.Data.Models.EvaluationItem", b =>
                {
                    b.HasOne("WebApp.Data.Models.Course", "Course")
                        .WithMany("EvaluationItems")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Data.Models.EvaluationGroup", "EvaluationGroup")
                        .WithMany("EvaluationItems")
                        .HasForeignKey("EvaluationGroupId");

                    b.Navigation("Course");

                    b.Navigation("EvaluationGroup");
                });

            modelBuilder.Entity("WebApp.Data.Models.Course", b =>
                {
                    b.Navigation("EvaluationItems");
                });

            modelBuilder.Entity("WebApp.Data.Models.EvaluationGroup", b =>
                {
                    b.Navigation("EvaluationItems");
                });
#pragma warning restore 612, 618
        }
    }
}
