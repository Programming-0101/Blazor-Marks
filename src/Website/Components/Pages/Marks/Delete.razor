@page "/marks/delete/{id:int}"
@using WebApp.Data.DAL
@using WebApp.Data.Models
@using Microsoft.EntityFrameworkCore
@inject MyMarksContext DB
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Movie</h4>
    <hr />
    @if (Evaluation is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            @* <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@movie.Title</dd>
            <dt class="col-sm-2">Release date</dt>
            <dd class="col-sm-10">@movie.ReleaseDate</dd>
            <dt class="col-sm-2">Genre</dt>
            <dd class="col-sm-10">@movie.Genre</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@movie.Price</dd> *@
        </dl>

        <EditForm method="post" Model="Evaluation" OnValidSubmit="DeleteMovie" FormName="delete">
            <button type="submit" class="btn btn-danger" disabled="@(Evaluation is null)">Delete</button> |
            <a href="movies">Back to List</a>
        </EditForm>
    }
</div>

@code {
    public static string Url(EvaluationItem movie) =>
        $"movies/delete/{Uri.EscapeDataString(movie.EvaluationItemId.ToString())}";

    EvaluationItem? Evaluation;

    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        Evaluation = DB.EvaluationItems.FirstOrDefault(m => m.EvaluationItemId == Id);

        if (Evaluation is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public void DeleteMovie()
    {
        DB.EvaluationItems.Remove(Evaluation!);
        DB.SaveChanges();
        NavigationManager.NavigateTo("marks");
    }
}